spec_version: 2
description: Workflow to set a VM's power-state

workflow: 
  scope: env

outputs:
  vm_names:
    value: '{{ .grains.collect_vm_names.activities.deploy.commands.get-vm-names.outputs.vmNames }}'
  vm_names1:
    value: '{{ .grains.collect_vm_names.activities.deploy.commands.get-vm-names2.outputs.vmNames }}'
  vm_names2:
    value: '{{ .grains.collect_vm_names2.activities.deploy.commands.get-vm-names.outputs.vmNames }}'
  vm_names3:
    value: '{{ .grains.collect_vm_names2.activities.deploy.commands.get-vm-names2.outputs.vms }}'

grains:
  collect_vm_names:
    kind: shell
    spec:
      agent:
        name: openshift-agent
      activities:
        deploy:
          commands:
            - name: get-vm-names
              command: >
                'export vmNames="$(jq -r '.resources[] | select(.resource_type | test("(?i)virtualmachine")) | .resource_name' $CONTRACT_FILE_PATH)" && echo "VM Names: $vmNames"'
              # for debugging add && cat $CONTRACT_FILE_PATH
              outputs:
                - vmNames
            - name: get-vm-names2
              command: >
                export vmNames="Names" && echo "VM Names: $vmNames"
              # for debugging add && cat $CONTRACT_FILE_PATH
              outputs:
                - vmNames

  collect_vm_names2:
    kind: shell
    spec:
      agent:
        name: openshift-agent
      files:
        - source: torque-tf-blueprints
          path: scripts/get_vm_names/get_vm_names.py
      activities:
        deploy:
          commands:
            - name: get-vm-names
              command: 'python get_vm_names.py && echo "VM Names: $vmNames"'
              outputs:
                - vmNames
            - name: get-vm-names2
              command: 'export vms="$(python get_vm_names.py)" && echo "VM Names: $vms"'
              outputs:
                - vms