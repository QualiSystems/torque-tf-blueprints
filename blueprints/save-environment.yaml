spec_version: 2
description: Workflow to set a VM's power-state

workflow: 
  scope: env

inputs:
  torque_token:
    type: string
    description: "Token for Torque API."
    default: ""
  github_token:
    type: string
    description: "Token for GitHub API."
    default: ""
  github_repo:
    type: string
    description: "Name of the GitHub repository."
    default: "https://github.com/QualiSystems/torque-tf-blueprints"

grains:
  collect_vm_names:
    kind: shell
    spec:
      agent:
        name: openshift-agent
      activities:
        deploy:
          commands:
            - name: my_script
              command: >
                if [ -f "$CONTRACT_FILE_PATH" ]; then vmNames=$(jq -r '(.inputs[] | select(.name=="target_namespace") | .value | gsub("^ +| +$";"")) as $ns | [ .inputs[] | select(.name=="vm_name") | .value | gsub("^ +| +$";"") | . + ":" + $ns ] | join(",")' "$CONTRACT_FILE_PATH"); else vmNames=""; fi; export vmNames
              outputs:
                - vmNames

  power-off-vms:
    kind: ansible
    depends-on: collect_vm_names
    spec:
      source:
        store: torque-tf-blueprints
        path: ansible/power-off-vm-openshift.yml
      agent:
        name: openshift-agent
      inputs:
        - vm_csv: '{{ .grains.collect_vm_names.activities.deploy.commands.my_script.outputs.vmNames }}'
      # Ansible inventory file in a YAML format
      inventory-file:
        localhost:
          hosts:
            127.0.0.1:
              ansible_connection: local
  
  save-volume-snapshot:
    kind: helm
    depends-on: power-off-vms
    spec:
      agent:
        name: openshift-agent
      source:
        store: torque-tf-blueprints
        path: helm/k8s-clone-pvc-and-snapshot
      command-arguments: '--wait --wait-for-jobs --timeout 600s'
      inputs:
        - vmNames: '{{ .grains.collect_vm_names.activities.deploy.commands.my_script.outputs.vmNames }}'
      scripts:
        post-helm-install:
          source:
            store: torque-tf-blueprints
            path:  scripts/check_saved_pvc_snapshots.sh
          arguments: '{{ .grains.collect_vm_names.activities.deploy.commands.my_script.outputs.vmNames }}'
          outputs:
            - snapshots_json
  
  save-env-script:
    kind: shell
    depends-on: save-volume-snapshot
    spec:
      env-vars:
        - GITHUB_TOKEN: "{{ .inputs.github_token }}"
        - TORQUE_API_TOKEN: "{{ .inputs.torque_token }}"
        - GITHUB_REPO: "{{ .inputs.github_repo }}"
      agent:
        name: openshift-agent
      files:
        - source: torque-tf-blueprints
          path: scripts/save_environment/save_environment.py
        - source: torque-tf-blueprints
          path: scripts/save_environment/requirements.txt
      activities:
        deploy:
          commands:
            - 'pip install -r ./scripts/save_environment/requirements.txt'
            - "python ./scripts/save_environment/save_environment.py --space={{ spaceName }} --new_inputs='{{ ..grains.instance.scripts.post-helm-install.outputs.snapshots_json }}' --workflow-contract=$CONTRACT_FILE_PATH"

