spec_version: 2
inputs:
  networks:
    type: 'string'
    default: default
  cpu:
    type: 'string'
    allowed-values:
      - '1'
      - '2'
      - '4'
      - '8'
      - '16'
    default: '1'
  ram:
    type: 'string'
    allowed-values:
      - '1Gi'
      - '2Gi'
      - '4Gi'
      - '8Gi'
      - '16Gi'
      - '24Gi'
      - '32Gi'
      - '64Gi'
    default: '4Gi'
  image_os:
    type: string
    default: fedora-5gb
  image_namespace:
    type: string
    default: default
  target_namespace:
    type: string
    default: quali

outputs:
  vm_name:
    type: string
    value: '{{ .grains.instance.outputs.vm_name }}'
  storage:
    type: string
    value: '{{ .grains.instance.outputs.storage }}'
  ip:
    type: string
    value: '{{ .grains.instance.outputs.ip }}'
  user:
    type: string
    value: '{{ .grains.instance.outputs.user }}'
  password:
    type: string
    value: '{{ .grains.instance.outputs.password }}'

grains:
  instance:
    kind: helm
    spec:
      agent:
        name: openshift-agent
      source:
        store: torque-tf-blueprints
        path: helm/k8s-deploy-template
      command-arguments: '--wait --wait-for-jobs --timeout 600s'
      inputs:
        - vmName: '{{ .inputs.image_os }}-dv-{{ sandboxid | downcase }}'
        - namespace: '{{ .inputs.target_namespace }}'
        - imageNs: '{{ .inputs.image_namespace }}'
        - imageDs: '{{ .inputs.image_os }}'
        - networks: "{{ .inputs.networks }}"
        - cpu: '{{ .inputs.cpu }}'
        - ram: '{{ .inputs.ram }}'
      scripts:
        post-helm-install:
          source:
            store: torque-tf-blueprints
            path:  scripts/get_openshift_vm_state.sh
          outputs:
            - vm_name
            - storage
            - ip
            - user
            - password