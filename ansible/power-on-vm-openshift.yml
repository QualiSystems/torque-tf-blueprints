---
- name: Power On VM in OpenShift using KubeVirt API
  hosts: localhost
  connection: local
  gather_facts: false
  collections:
    - kubernetes.core

  vars:
    # VM parameters - these can be overridden via extra vars
    vm_name: "{{ vm_name }}"
    namespace: "{{ namespace | default('vms') }}"
    ansible_python_interpreter: /usr/bin/python3

  tasks:
    - name: Ensure Python dependencies for k8s modules
      package:
        name:
          - python3-pip
        state: present
      become: true
      ignore_errors: true  # Skip if running inside a container that doesn't support package installation

    - name: Install Kubernetes & OpenShift Python client libs
      pip:
        name:
          - kubernetes>=12.0.0
          - openshift>=0.12.0
        executable: pip3
      ignore_errors: true  # Skip if running inside a container with these libraries pre-installed

    - name: Check if VM exists
      k8s_info:
        api_version: kubevirt.io/v1
        kind: VirtualMachine
        namespace: "{{ namespace }}"
        name: "{{ vm_name }}"
      register: vm_status
      failed_when: vm_status.resources | length == 0
      
    - name: Get current VM running state
      set_fact:
        vm_running: "{{ vm_status.resources[0].spec.running | default(false) }}"
        
    - name: Show current VM state
      debug:
        msg: "VM '{{ vm_name }}' in namespace '{{ namespace }}' is currently {{ 'running' if vm_running else 'stopped' }}"

    - name: Power on VM if not already running
      when: not vm_running
      block:
        - name: Update VM definition to set running state to true
          k8s:
            state: patched
            api_version: kubevirt.io/v1
            kind: VirtualMachine
            namespace: "{{ namespace }}"
            name: "{{ vm_name }}"
            definition:
              spec:
                running: true
          register: vm_start_result

        - name: Show VM start action result
          debug:
            msg: "Started powering on VM '{{ vm_name }}'"
            
        - name: Wait for VM to become ready
          k8s_info:
            api_version: kubevirt.io/v1
            kind: VirtualMachineInstance
            namespace: "{{ namespace }}"
            name: "{{ vm_name }}"
          register: vmi_status
          until: 
            - vmi_status.resources | length > 0
            - vmi_status.resources[0].status is defined 
            - vmi_status.resources[0].status.phase is defined
            - vmi_status.resources[0].status.phase == "Running"
          retries: 30
          delay: 10
          
        - name: Get VM IP address
          k8s_info:
            api_version: kubevirt.io/v1
            kind: VirtualMachineInstance
            namespace: "{{ namespace }}"
            name: "{{ vm_name }}"
          register: vm_info
          
        - name: Display VM IP address
          debug:
            msg: "VM '{{ vm_name }}' is now running with IP: {{ vm_info.resources[0].status.interfaces[0].ipAddress | default('IP not available yet') }}"
          when: 
            - vm_info.resources | length > 0
            - vm_info.resources[0].status is defined
            - vm_info.resources[0].status.interfaces is defined
            - vm_info.resources[0].status.interfaces | length > 0
            - vm_info.resources[0].status.interfaces[0].ipAddress is defined
      
    - name: VM is already running
      debug:
        msg: "VM '{{ vm_name }}' is already running - no action needed"
      when: vm_running
